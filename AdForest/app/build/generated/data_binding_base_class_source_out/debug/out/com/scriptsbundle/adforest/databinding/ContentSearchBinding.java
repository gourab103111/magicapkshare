// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout adSearcAd;

  @NonNull
  public final LinearLayout adSearcAdBottom;

  @NonNull
  public final FrameLayout frameContainer;

  @NonNull
  public final NestedScrollView scrollView;

  private ContentSearchBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout adSearcAd,
      @NonNull LinearLayout adSearcAdBottom, @NonNull FrameLayout frameContainer,
      @NonNull NestedScrollView scrollView) {
    this.rootView = rootView;
    this.adSearcAd = adSearcAd;
    this.adSearcAdBottom = adSearcAdBottom;
    this.frameContainer = frameContainer;
    this.scrollView = scrollView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adSearcAd;
      LinearLayout adSearcAd = ViewBindings.findChildViewById(rootView, id);
      if (adSearcAd == null) {
        break missingId;
      }

      id = R.id.adSearcAdBottom;
      LinearLayout adSearcAdBottom = ViewBindings.findChildViewById(rootView, id);
      if (adSearcAdBottom == null) {
        break missingId;
      }

      id = R.id.frameContainer;
      FrameLayout frameContainer = ViewBindings.findChildViewById(rootView, id);
      if (frameContainer == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      return new ContentSearchBinding((RelativeLayout) rootView, adSearcAd, adSearcAdBottom,
          frameContainer, scrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
