// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CarouselItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout flShadowContainer;

  @NonNull
  public final ImageView ivAutoImageSlider;

  @NonNull
  public final ImageView ivGifContainer;

  @NonNull
  public final TextView tvAutoImageSlider;

  private CarouselItemBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout flShadowContainer,
      @NonNull ImageView ivAutoImageSlider, @NonNull ImageView ivGifContainer,
      @NonNull TextView tvAutoImageSlider) {
    this.rootView = rootView;
    this.flShadowContainer = flShadowContainer;
    this.ivAutoImageSlider = ivAutoImageSlider;
    this.ivGifContainer = ivGifContainer;
    this.tvAutoImageSlider = tvAutoImageSlider;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CarouselItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CarouselItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.carousel_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CarouselItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fl_shadow_container;
      FrameLayout flShadowContainer = ViewBindings.findChildViewById(rootView, id);
      if (flShadowContainer == null) {
        break missingId;
      }

      id = R.id.iv_auto_image_slider;
      ImageView ivAutoImageSlider = ViewBindings.findChildViewById(rootView, id);
      if (ivAutoImageSlider == null) {
        break missingId;
      }

      id = R.id.iv_gif_container;
      ImageView ivGifContainer = ViewBindings.findChildViewById(rootView, id);
      if (ivGifContainer == null) {
        break missingId;
      }

      id = R.id.tv_auto_image_slider;
      TextView tvAutoImageSlider = ViewBindings.findChildViewById(rootView, id);
      if (tvAutoImageSlider == null) {
        break missingId;
      }

      return new CarouselItemBinding((FrameLayout) rootView, flShadowContainer, ivAutoImageSlider,
          ivGifContainer, tvAutoImageSlider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
