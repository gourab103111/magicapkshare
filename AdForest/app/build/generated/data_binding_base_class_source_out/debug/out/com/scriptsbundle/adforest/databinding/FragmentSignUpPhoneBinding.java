// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.hbb20.CountryCodePicker;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignUpPhoneBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView alreadyUser;

  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final EditText fullName;

  @NonNull
  public final View line;

  @NonNull
  public final RelativeLayout myLinearLayout;

  @NonNull
  public final NestedScrollView nestedScroll;

  @NonNull
  public final TextView or;

  @NonNull
  public final EditText password;

  @NonNull
  public final ShimmerFrameLayout shimmerFrameLayout;

  @NonNull
  public final LinearLayout shimmerMain;

  @NonNull
  public final Button signUpBtn;

  @NonNull
  public final CheckBox subscribeCheckbox;

  @NonNull
  public final TextView subscribeText;

  @NonNull
  public final CheckBox termsConditions;

  @NonNull
  public final TextView termsConditionsText;

  @NonNull
  public final TextView title;

  @NonNull
  public final EditText userEmailId;

  private FragmentSignUpPhoneBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView alreadyUser, @NonNull CountryCodePicker ccp, @NonNull EditText fullName,
      @NonNull View line, @NonNull RelativeLayout myLinearLayout,
      @NonNull NestedScrollView nestedScroll, @NonNull TextView or, @NonNull EditText password,
      @NonNull ShimmerFrameLayout shimmerFrameLayout, @NonNull LinearLayout shimmerMain,
      @NonNull Button signUpBtn, @NonNull CheckBox subscribeCheckbox,
      @NonNull TextView subscribeText, @NonNull CheckBox termsConditions,
      @NonNull TextView termsConditionsText, @NonNull TextView title,
      @NonNull EditText userEmailId) {
    this.rootView = rootView;
    this.alreadyUser = alreadyUser;
    this.ccp = ccp;
    this.fullName = fullName;
    this.line = line;
    this.myLinearLayout = myLinearLayout;
    this.nestedScroll = nestedScroll;
    this.or = or;
    this.password = password;
    this.shimmerFrameLayout = shimmerFrameLayout;
    this.shimmerMain = shimmerMain;
    this.signUpBtn = signUpBtn;
    this.subscribeCheckbox = subscribeCheckbox;
    this.subscribeText = subscribeText;
    this.termsConditions = termsConditions;
    this.termsConditionsText = termsConditionsText;
    this.title = title;
    this.userEmailId = userEmailId;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignUpPhoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignUpPhoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_up_phone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignUpPhoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.already_user;
      TextView alreadyUser = ViewBindings.findChildViewById(rootView, id);
      if (alreadyUser == null) {
        break missingId;
      }

      id = R.id.ccp;
      CountryCodePicker ccp = ViewBindings.findChildViewById(rootView, id);
      if (ccp == null) {
        break missingId;
      }

      id = R.id.fullName;
      EditText fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      RelativeLayout myLinearLayout = (RelativeLayout) rootView;

      id = R.id.nestedScroll;
      NestedScrollView nestedScroll = ViewBindings.findChildViewById(rootView, id);
      if (nestedScroll == null) {
        break missingId;
      }

      id = R.id.or;
      TextView or = ViewBindings.findChildViewById(rootView, id);
      if (or == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.shimmerFrameLayout;
      ShimmerFrameLayout shimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.shimmerMain;
      LinearLayout shimmerMain = ViewBindings.findChildViewById(rootView, id);
      if (shimmerMain == null) {
        break missingId;
      }

      id = R.id.signUpBtn;
      Button signUpBtn = ViewBindings.findChildViewById(rootView, id);
      if (signUpBtn == null) {
        break missingId;
      }

      id = R.id.subscribeCheckbox;
      CheckBox subscribeCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (subscribeCheckbox == null) {
        break missingId;
      }

      id = R.id.subscribeText;
      TextView subscribeText = ViewBindings.findChildViewById(rootView, id);
      if (subscribeText == null) {
        break missingId;
      }

      id = R.id.terms_conditions;
      CheckBox termsConditions = ViewBindings.findChildViewById(rootView, id);
      if (termsConditions == null) {
        break missingId;
      }

      id = R.id.terms_conditionsText;
      TextView termsConditionsText = ViewBindings.findChildViewById(rootView, id);
      if (termsConditionsText == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.userEmailId;
      EditText userEmailId = ViewBindings.findChildViewById(rootView, id);
      if (userEmailId == null) {
        break missingId;
      }

      return new FragmentSignUpPhoneBinding((RelativeLayout) rootView, alreadyUser, ccp, fullName,
          line, myLinearLayout, nestedScroll, or, password, shimmerFrameLayout, shimmerMain,
          signUpBtn, subscribeCheckbox, subscribeText, termsConditions, termsConditionsText, title,
          userEmailId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
