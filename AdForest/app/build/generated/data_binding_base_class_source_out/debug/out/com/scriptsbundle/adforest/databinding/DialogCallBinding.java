// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCallBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final ImageView textView3;

  @NonNull
  public final TextView verifiedOrNotText;

  private DialogCallBinding(@NonNull RelativeLayout rootView, @NonNull Button cancelButton,
      @NonNull ImageView imageView4, @NonNull LinearLayout linearLayout5,
      @NonNull Button sendButton, @NonNull TextView textView2, @NonNull ImageView textView3,
      @NonNull TextView verifiedOrNotText) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.imageView4 = imageView4;
    this.linearLayout5 = linearLayout5;
    this.sendButton = sendButton;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.verifiedOrNotText = verifiedOrNotText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.send_button;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      ImageView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.verifiedOrNotText;
      TextView verifiedOrNotText = ViewBindings.findChildViewById(rootView, id);
      if (verifiedOrNotText == null) {
        break missingId;
      }

      return new DialogCallBinding((RelativeLayout) rootView, cancelButton, imageView4,
          linearLayout5, sendButton, textView2, textView3, verifiedOrNotText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
