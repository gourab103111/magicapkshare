// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myloadingbutton.MyLoadingButton;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView BlockedTextMessage;

  @NonNull
  public final ProgressBar attachmentProgress;

  @NonNull
  public final Button blockBtn;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout chat;

  @NonNull
  public final LinearLayout form;

  @NonNull
  public final LinearLayout ll1;

  @NonNull
  public final TextView loginTime;

  @NonNull
  public final LinearLayout messageContainer;

  @NonNull
  public final EditText messageEditText;

  @NonNull
  public final LinearLayout messageLayout;

  @NonNull
  public final ListView msgListView;

  @NonNull
  public final MyLoadingButton myLoadingButton;

  @NonNull
  public final ImageView pickerView;

  @NonNull
  public final ImageButton sendMessageButton;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final View temp;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView tvTyping;

  @NonNull
  public final TextView verified;

  private FragmentChatLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView BlockedTextMessage, @NonNull ProgressBar attachmentProgress,
      @NonNull Button blockBtn, @NonNull CardView cardView, @NonNull LinearLayout chat,
      @NonNull LinearLayout form, @NonNull LinearLayout ll1, @NonNull TextView loginTime,
      @NonNull LinearLayout messageContainer, @NonNull EditText messageEditText,
      @NonNull LinearLayout messageLayout, @NonNull ListView msgListView,
      @NonNull MyLoadingButton myLoadingButton, @NonNull ImageView pickerView,
      @NonNull ImageButton sendMessageButton, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull View temp, @NonNull TextView textViewName, @NonNull TextView tvTyping,
      @NonNull TextView verified) {
    this.rootView = rootView;
    this.BlockedTextMessage = BlockedTextMessage;
    this.attachmentProgress = attachmentProgress;
    this.blockBtn = blockBtn;
    this.cardView = cardView;
    this.chat = chat;
    this.form = form;
    this.ll1 = ll1;
    this.loginTime = loginTime;
    this.messageContainer = messageContainer;
    this.messageEditText = messageEditText;
    this.messageLayout = messageLayout;
    this.msgListView = msgListView;
    this.myLoadingButton = myLoadingButton;
    this.pickerView = pickerView;
    this.sendMessageButton = sendMessageButton;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.temp = temp;
    this.textViewName = textViewName;
    this.tvTyping = tvTyping;
    this.verified = verified;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChatLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BlockedTextMessage;
      TextView BlockedTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (BlockedTextMessage == null) {
        break missingId;
      }

      id = R.id.attachmentProgress;
      ProgressBar attachmentProgress = ViewBindings.findChildViewById(rootView, id);
      if (attachmentProgress == null) {
        break missingId;
      }

      id = R.id.block_btn;
      Button blockBtn = ViewBindings.findChildViewById(rootView, id);
      if (blockBtn == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.chat;
      LinearLayout chat = ViewBindings.findChildViewById(rootView, id);
      if (chat == null) {
        break missingId;
      }

      id = R.id.form;
      LinearLayout form = ViewBindings.findChildViewById(rootView, id);
      if (form == null) {
        break missingId;
      }

      id = R.id.ll1;
      LinearLayout ll1 = ViewBindings.findChildViewById(rootView, id);
      if (ll1 == null) {
        break missingId;
      }

      id = R.id.loginTime;
      TextView loginTime = ViewBindings.findChildViewById(rootView, id);
      if (loginTime == null) {
        break missingId;
      }

      id = R.id.messageContainer;
      LinearLayout messageContainer = ViewBindings.findChildViewById(rootView, id);
      if (messageContainer == null) {
        break missingId;
      }

      id = R.id.messageEditText;
      EditText messageEditText = ViewBindings.findChildViewById(rootView, id);
      if (messageEditText == null) {
        break missingId;
      }

      id = R.id.messageLayout;
      LinearLayout messageLayout = ViewBindings.findChildViewById(rootView, id);
      if (messageLayout == null) {
        break missingId;
      }

      id = R.id.msgListView;
      ListView msgListView = ViewBindings.findChildViewById(rootView, id);
      if (msgListView == null) {
        break missingId;
      }

      id = R.id.my_loading_button;
      MyLoadingButton myLoadingButton = ViewBindings.findChildViewById(rootView, id);
      if (myLoadingButton == null) {
        break missingId;
      }

      id = R.id.pickerView;
      ImageView pickerView = ViewBindings.findChildViewById(rootView, id);
      if (pickerView == null) {
        break missingId;
      }

      id = R.id.sendMessageButton;
      ImageButton sendMessageButton = ViewBindings.findChildViewById(rootView, id);
      if (sendMessageButton == null) {
        break missingId;
      }

      id = R.id.swipe_refresh_layout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.temp;
      View temp = ViewBindings.findChildViewById(rootView, id);
      if (temp == null) {
        break missingId;
      }

      id = R.id.text_viewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.tv_typing;
      TextView tvTyping = ViewBindings.findChildViewById(rootView, id);
      if (tvTyping == null) {
        break missingId;
      }

      id = R.id.verified;
      TextView verified = ViewBindings.findChildViewById(rootView, id);
      if (verified == null) {
        break missingId;
      }

      return new FragmentChatLayoutBinding((RelativeLayout) rootView, BlockedTextMessage,
          attachmentProgress, blockBtn, cardView, chat, form, ll1, loginTime, messageContainer,
          messageEditText, messageLayout, msgListView, myLoadingButton, pickerView,
          sendMessageButton, swipeRefreshLayout, temp, textViewName, tvTyping, verified);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
