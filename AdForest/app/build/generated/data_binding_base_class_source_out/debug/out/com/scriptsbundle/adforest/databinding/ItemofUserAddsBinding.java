// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemofUserAddsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RelativeLayout buttonLayout;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView delAdd;

  @NonNull
  public final TextView editAdd;

  @NonNull
  public final RelativeLayout editDelLayout;

  @NonNull
  public final View editView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout lastrow;

  @NonNull
  public final LinearLayout layoutDellAd;

  @NonNull
  public final LinearLayout layoutEditAd;

  @NonNull
  public final RelativeLayout linearLayoutCardView;

  @NonNull
  public final TextView prices;

  @NonNull
  public final RelativeLayout rel1;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final RelativeLayout textLaytout;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textViewEDitwla;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView views;

  @NonNull
  public final View viw;

  private ItemofUserAddsBinding(@NonNull CardView rootView, @NonNull RelativeLayout buttonLayout,
      @NonNull CardView cardView, @NonNull TextView delAdd, @NonNull TextView editAdd,
      @NonNull RelativeLayout editDelLayout, @NonNull View editView, @NonNull ImageView imageView,
      @NonNull LinearLayout lastrow, @NonNull LinearLayout layoutDellAd,
      @NonNull LinearLayout layoutEditAd, @NonNull RelativeLayout linearLayoutCardView,
      @NonNull TextView prices, @NonNull RelativeLayout rel1, @NonNull Spinner spinner,
      @NonNull RelativeLayout textLaytout, @NonNull TextView textView17,
      @NonNull TextView textView4, @NonNull TextView textViewEDitwla,
      @NonNull TextView textViewName, @NonNull TextView views, @NonNull View viw) {
    this.rootView = rootView;
    this.buttonLayout = buttonLayout;
    this.cardView = cardView;
    this.delAdd = delAdd;
    this.editAdd = editAdd;
    this.editDelLayout = editDelLayout;
    this.editView = editView;
    this.imageView = imageView;
    this.lastrow = lastrow;
    this.layoutDellAd = layoutDellAd;
    this.layoutEditAd = layoutEditAd;
    this.linearLayoutCardView = linearLayoutCardView;
    this.prices = prices;
    this.rel1 = rel1;
    this.spinner = spinner;
    this.textLaytout = textLaytout;
    this.textView17 = textView17;
    this.textView4 = textView4;
    this.textViewEDitwla = textViewEDitwla;
    this.textViewName = textViewName;
    this.views = views;
    this.viw = viw;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemofUserAddsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemofUserAddsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.itemof_user_adds, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemofUserAddsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLayout;
      RelativeLayout buttonLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLayout == null) {
        break missingId;
      }

      CardView cardView = (CardView) rootView;

      id = R.id.delAdd;
      TextView delAdd = ViewBindings.findChildViewById(rootView, id);
      if (delAdd == null) {
        break missingId;
      }

      id = R.id.editAdd;
      TextView editAdd = ViewBindings.findChildViewById(rootView, id);
      if (editAdd == null) {
        break missingId;
      }

      id = R.id.edit_del_layout;
      RelativeLayout editDelLayout = ViewBindings.findChildViewById(rootView, id);
      if (editDelLayout == null) {
        break missingId;
      }

      id = R.id.editView;
      View editView = ViewBindings.findChildViewById(rootView, id);
      if (editView == null) {
        break missingId;
      }

      id = R.id.image_view;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.lastrow;
      LinearLayout lastrow = ViewBindings.findChildViewById(rootView, id);
      if (lastrow == null) {
        break missingId;
      }

      id = R.id.layoutDellAd;
      LinearLayout layoutDellAd = ViewBindings.findChildViewById(rootView, id);
      if (layoutDellAd == null) {
        break missingId;
      }

      id = R.id.layoutEditAd;
      LinearLayout layoutEditAd = ViewBindings.findChildViewById(rootView, id);
      if (layoutEditAd == null) {
        break missingId;
      }

      id = R.id.linear_layout_card_view;
      RelativeLayout linearLayoutCardView = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCardView == null) {
        break missingId;
      }

      id = R.id.prices;
      TextView prices = ViewBindings.findChildViewById(rootView, id);
      if (prices == null) {
        break missingId;
      }

      id = R.id.rel1;
      RelativeLayout rel1 = ViewBindings.findChildViewById(rootView, id);
      if (rel1 == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.textLaytout;
      RelativeLayout textLaytout = ViewBindings.findChildViewById(rootView, id);
      if (textLaytout == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textViewEDitwla;
      TextView textViewEDitwla = ViewBindings.findChildViewById(rootView, id);
      if (textViewEDitwla == null) {
        break missingId;
      }

      id = R.id.text_view_name;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.views;
      TextView views = ViewBindings.findChildViewById(rootView, id);
      if (views == null) {
        break missingId;
      }

      id = R.id.viw;
      View viw = ViewBindings.findChildViewById(rootView, id);
      if (viw == null) {
        break missingId;
      }

      return new ItemofUserAddsBinding((CardView) rootView, buttonLayout, cardView, delAdd, editAdd,
          editDelLayout, editView, imageView, lastrow, layoutDellAd, layoutEditAd,
          linearLayoutCardView, prices, rel1, spinner, textLaytout, textView17, textView4,
          textViewEDitwla, textViewName, views, viw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
