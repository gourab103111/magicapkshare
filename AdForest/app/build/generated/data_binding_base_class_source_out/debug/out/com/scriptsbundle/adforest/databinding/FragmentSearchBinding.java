// Generated by view binder compiler. Do not edit!
package com.scriptsbundle.adforest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.scriptsbundle.adforest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout customOptionLL;

  @NonNull
  public final LinearLayout filterLayout;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearhide;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RelativeLayout mainRelative;

  @NonNull
  public final ProgressBar progressBar2;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RecyclerView recyclerView2;

  @NonNull
  public final RelativeLayout rel1;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final ShimmerFrameLayout shimmerFrameLayout;

  @NonNull
  public final LinearLayout shimmerMain;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textViewFilter;

  private FragmentSearchBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout customOptionLL, @NonNull LinearLayout filterLayout,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearhide,
      @NonNull RelativeLayout main, @NonNull RelativeLayout mainRelative,
      @NonNull ProgressBar progressBar2, @NonNull RecyclerView recyclerView,
      @NonNull RecyclerView recyclerView2, @NonNull RelativeLayout rel1, @NonNull Button sendButton,
      @NonNull ShimmerFrameLayout shimmerFrameLayout, @NonNull LinearLayout shimmerMain,
      @NonNull Spinner spinner, @NonNull TextView textView6, @NonNull TextView textViewFilter) {
    this.rootView = rootView;
    this.customOptionLL = customOptionLL;
    this.filterLayout = filterLayout;
    this.linearLayout = linearLayout;
    this.linearhide = linearhide;
    this.main = main;
    this.mainRelative = mainRelative;
    this.progressBar2 = progressBar2;
    this.recyclerView = recyclerView;
    this.recyclerView2 = recyclerView2;
    this.rel1 = rel1;
    this.sendButton = sendButton;
    this.shimmerFrameLayout = shimmerFrameLayout;
    this.shimmerMain = shimmerMain;
    this.spinner = spinner;
    this.textView6 = textView6;
    this.textViewFilter = textViewFilter;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.customOptionLL;
      LinearLayout customOptionLL = ViewBindings.findChildViewById(rootView, id);
      if (customOptionLL == null) {
        break missingId;
      }

      id = R.id.filter_layout;
      LinearLayout filterLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearhide;
      LinearLayout linearhide = ViewBindings.findChildViewById(rootView, id);
      if (linearhide == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.mainRelative;
      RelativeLayout mainRelative = ViewBindings.findChildViewById(rootView, id);
      if (mainRelative == null) {
        break missingId;
      }

      id = R.id.progressBar2;
      ProgressBar progressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar2 == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.recycler_view2;
      RecyclerView recyclerView2 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView2 == null) {
        break missingId;
      }

      id = R.id.rel1;
      RelativeLayout rel1 = ViewBindings.findChildViewById(rootView, id);
      if (rel1 == null) {
        break missingId;
      }

      id = R.id.send_button;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.shimmerFrameLayout;
      ShimmerFrameLayout shimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.shimmerMain;
      LinearLayout shimmerMain = ViewBindings.findChildViewById(rootView, id);
      if (shimmerMain == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textViewFilter;
      TextView textViewFilter = ViewBindings.findChildViewById(rootView, id);
      if (textViewFilter == null) {
        break missingId;
      }

      return new FragmentSearchBinding((RelativeLayout) rootView, customOptionLL, filterLayout,
          linearLayout, linearhide, main, mainRelative, progressBar2, recyclerView, recyclerView2,
          rel1, sendButton, shimmerFrameLayout, shimmerMain, spinner, textView6, textViewFilter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
